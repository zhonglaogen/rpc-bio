server:
1.代理类创建socketserver，将业务对象实例service传给代理类，等待用户socket连接
2.连接后创建线程ProcessorHandler来处理用户请求，将service和socket参数传入
3.ProcessorHandler将请求对象rpcRequest以反序列化的形式拿到，socket的getinputStream
4.通过反射将请求对象rpcRequest请求的方法和参数类型拿到，
5.invoke（service，args）方法，将返回结果result以序列化的形式传给客户端。

client：
1.创建client代理类，通过动态代理的方式创建接口IHelloService的实例，
2.将接口信息，host地址，port端口号传入client代理类。
3.return通过Proxy的静态方法创建动态代理IHelloService，传入自定义动态代理实例，将host和port传入自定义
动态代理。
4.自定义动态代理RemoteInvocationHandler实现IHelloService，创建RPCRequest实例，将需要调用的方法名和参数封装到RPCRequest实例，
将RPCRequest实例传入传输类
5.自定义传输类RPCNetTransport，将host和port传入传输类，通过新建一个socket发送RPCRequest给服务端，
在得到服务端的响应结果，将结果返回到动态代理类RemoteInvocationHandler的invoke方法，invoke方法在将
结果返回给调用者

因为user类和rpcRequest类的对象都会传输，所以要实现序列化的接口


